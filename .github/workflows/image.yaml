name: CI/CD Pipeline

on:
  push:
    branches:
      - kind
    paths-ignore:
      - '**/README.md'
      - '**/*.yaml'
  pull_request:
    branches:
      - kind
    paths-ignore:
      - '**/README.md'
      - '**/*.yaml'

env:
  REGISTRY: ghcr.io
  FRONTEND_IMAGE: ghcr.io/${{ github.repository_owner }}/easyfront
  BACKEND_IMAGE: ghcr.io/${{ github.repository_owner }}/easyback

permissions:
  contents: write
  packages: write
  security-events: write

jobs:
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, java

      - name: Build backend for CodeQL
        working-directory: ./backend
        run: |
          chmod +x mvnw || true
          ./mvnw clean compile -DskipTests

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run CodeQL analysis
        uses: github/codeql-action/analyze@v3

  build-scan-push:
    name: Build → Scan → Push → Email
    runs-on: ubuntu-latest
    needs: codeql-analysis

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ---- BACKEND ----
      - name: Build backend image
        run: docker build -t $BACKEND_IMAGE:${{ github.sha }} ./backend

      - name: Trivy scan backend image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.BACKEND_IMAGE }}:${{ github.sha }}
          format: table
          output: trivy-backend-report.txt
          exit-code: '0'
          ignore-unfixed: true

      - name: Push backend image
        run: |
          docker push $BACKEND_IMAGE:${{ github.sha }}
          docker tag $BACKEND_IMAGE:${{ github.sha }} $BACKEND_IMAGE:latest
          docker push $BACKEND_IMAGE:latest

      # ---- FRONTEND ----
      - name: Build frontend image
        run: docker build -t $FRONTEND_IMAGE:${{ github.sha }} ./frontend

      - name: Trivy scan frontend image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.FRONTEND_IMAGE }}:${{ github.sha }}
          format: table
          output: trivy-frontend-report.txt
          exit-code: '0'
          ignore-unfixed: true

      - name: Push frontend image
        run: |
          docker push $FRONTEND_IMAGE:${{ github.sha }}
          docker tag $FRONTEND_IMAGE:${{ github.sha }} $FRONTEND_IMAGE:latest
          docker push $FRONTEND_IMAGE:latest

      # ---- Upload Trivy Reports ----
      - name: Upload Trivy reports
        uses: actions/upload-artifact@v4
        with:
          name: trivy-reports
          path: |
            trivy-backend-report.txt
            trivy-frontend-report.txt

      # ---- Email Reports ----
      - name: Email Trivy Reports
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.GMAIL_USER }}
          password: ${{ secrets.GMAIL_PASS }}
          subject: "Trivy Security Scan - ${{ github.repository }} (${{ github.sha }})"
          to: ${{ secrets.REPORT_RECIPIENT }}
          from: "CI Pipeline <${{ secrets.GMAIL_USER }}>"
          body: |
            Hello,

            Attached are Trivy vulnerability reports for:
            - Backend: $BACKEND_IMAGE:${{ github.sha }}
            - Frontend: $FRONTEND_IMAGE:${{ github.sha }}

            Repository: ${{ github.repository }}
            Commit: ${{ github.sha }}

            Regards,
            GitHub Actions CI/CD
          attachments: |
            trivy-backend-report.txt
            trivy-frontend-report.txt

  update-manifests:
    name: Update Kubernetes Manifests
    runs-on: ubuntu-latest
    needs: build-scan-push

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Update container image lines
        run: |
          echo "Updating yaml/frontend-pod.yaml"
          yq -i ".spec.template.spec.containers[0].image = \"${FRONTEND_IMAGE}:${{ github.sha }}\"" yaml/frontend-pod.yaml

          echo "Updating yaml/backend-pod.yaml"
          yq -i ".spec.template.spec.containers[0].image = \"${BACKEND_IMAGE}:${{ github.sha }}\"" yaml/backend-pod.yaml

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add yaml/frontend-pod.yaml yaml/backend-pod.yaml
          git commit -m "Update manifests: new images (${{ github.sha }})" || echo "No changes to commit"
          git push origin kind
